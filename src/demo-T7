semaphore mutex1, mutex2, mutex3, mutex0; // 限制同一信箱同时只能有一个进程访问
mutex1 = mutex2 = mutex3 = mutex0 = 1;
semaphore put1, put2, put3, put0; // 能否放入信箱
put1 = put2 = put3 = put0 = 0;
semaphore get1, get2, get3, get0; // 能否取出信箱
get1 = get2 = get3 = 0; get0 = 3;
int in1, in2, in3, in0, out1, out2, out3, out0; // 存取指针
in1 = in2 = in3 = in0 = out1 = out2 = out3 = out0 = 0;

Process P0() {
  while (true) {
    P(get0);
      P(mutex0);
        {读取信箱消息 }
        message = M0[out0];
        out0 = (out0 + 1) % 3;
      V(mutex0);
    V(put0);

    {加工消息}

    P(put1);
      P(mutex1);
        {写入信箱消息}
        M1[in1] = message 
        in1 = (in1 + 1) % 3;
      V(mutex1);
    V(get1);
  }
}

Process P1() {
  while (true) {
    P(get1);
      P(mutex1);
        {读取信箱消息 }
        message = M1[out1];
        out1 = (out1 + 1) % 3;
      V(mutex1);
    V(put1);

    {加工消息}

    P(put2);
      P(mutex2);
        {写入信箱消息}
        M2[in2] = message 
        in2 = (in2 + 1) % 3;
      V(mutex2);
    V(get2);
  }
}

Process P2() {
  while (true) {
    P(get2);
      P(mutex2);
        {读取信箱消息 }
        message = M2[out2];
        out2 = (out2 + 1) % 3;
      V(mutex2);
    V(put2);

    {加工消息}

    P(put3);
      P(mutex3);
        {写入信箱消息}
        M3[in3] = message 
        in3 = (in3 + 1) % 3;
      V(mutex3);
    V(get3);
  }
}

Process P3() {
  while (true) {
    P(get3);
      P(mutex3);
        {读取信箱消息 }
        message = M3[out3];
        out3 = (out3 + 1) % 3;
      V(mutex3);
    V(put3);

    {加工消息}

    P(put0);
      P(mutex0);
        {写入信箱消息}
        M0[in0] = message 
        in0 = (in0 + 1) % 3;
      V(mutex0);
    V(get0);
  }
}
